{"version":3,"sources":["common/Layout/Layout.component.tsx","common/Form/Form.component.tsx","common/Form/Field.component.tsx","common/Form/Submit.component.tsx","common/Form/FormError.component.tsx","signup/SignupForm/SignupForm.tsx","signup/Signup/Signup.tsx","App.tsx","reportWebVitals.ts","index.tsx","common/Form/Field.module.scss","common/Layout/Layout.module.scss","common/Form/Form.module.scss","common/Form/Submit.module.scss","common/Form/FormError.module.scss"],"names":["Layout","title","children","className","styles","Form","otherProps","Field","label","touched","error","formikProps","inputProps","id","name","role","aria-label","required","aria-invalid","aria-describedby","Submit","type","FormError","isValid","validationSchema","Yup","email","matches","password","min","confirmPassword","oneOf","SignupForm","onSubmit","useState","formTouched","setFormTouched","beforeSubmit","handleSubmit","event","initialValues","errors","getFieldProps","values","console","log","Signup","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.4df82dd9.chunk.js","sourcesContent":["import React from 'react';\nimport styles from './Layout.module.scss';\n\ninterface LayoutProps {\n  title?: string;\n  children?: React.ReactNode;\n}\n\nconst Layout = ({ title = '', children = null }: LayoutProps) => (\n  <div className={styles['layout']}>\n    <div className={styles['layout__content']}>\n      <h1>{title}</h1>\n      <div className={styles['layout__children-container']}>{children}</div>\n    </div>\n  </div>\n);\n\nexport default Layout;\n","import React, { FormHTMLAttributes } from 'react';\nimport styles from './Form.module.scss';\n\nconst Form = ({ children, ...otherProps }: FormHTMLAttributes<HTMLFormElement>) => (\n  <form className={styles['form']} {...otherProps}>\n    {children}\n  </form>\n);\n\nexport default Form;\n","import React, { InputHTMLAttributes } from 'react';\nimport { FieldInputProps } from 'formik';\nimport styles from './Field.module.scss';\n\ninterface FieldProps {\n  label: string;\n  formikProps: FieldInputProps<string | number | readonly string[] | undefined>;\n  touched?: boolean;\n  error?: string;\n  inputProps?: InputHTMLAttributes<HTMLInputElement>;\n}\n\nconst Field = ({\n  label,\n  touched = false,\n  error = '',\n  formikProps,\n  inputProps = {},\n}: FieldProps) => (\n  <div className={styles['field']}>\n    <div\n      id={`form-error_${formikProps.name}`}\n      className={styles['field__error']}\n      role=\"alert\"\n      aria-label={`${label} error`}\n    >\n      {touched ? error : ''}\n    </div>\n    <label>\n      {label}\n      <span className={styles['field__required-asterisk']}>\n        {inputProps.required ? ' *' : ''}\n      </span>\n      <input\n        className={`${styles['field__input']} ${\n          touched && error ? styles['field__input--invalid'] : ''\n        }`}\n        aria-invalid={touched && error ? 'true' : 'false'}\n        aria-describedby={`form-error_${formikProps.name}`}\n        {...formikProps}\n        {...inputProps}\n      />\n    </label>\n  </div>\n);\n\nexport default Field;\n","import React, { ButtonHTMLAttributes } from 'react';\nimport styles from './Submit.module.scss';\n\nconst Submit = ({ children, ...otherProps }: ButtonHTMLAttributes<HTMLButtonElement>) => (\n  <button type=\"submit\" className={styles['submit']} {...otherProps}>\n    {children}\n  </button>\n);\n\nexport default Submit;\n","import React from 'react';\nimport styles from './FormError.module.scss';\n\ninterface FormErrorProps {\n  isValid: boolean;\n  touched: boolean;\n}\n\nconst FormError = ({ touched, isValid }: FormErrorProps) => (\n  <div className={styles['form-error']} aria-label=\"Form error\" role=\"alert\">\n    {touched && !isValid && 'Form contains errors'}\n  </div>\n);\n\nexport default FormError;\n","import React, { useState } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Form, Field, Submit } from '../../common/Form';\nimport FormError from '../../common/Form/FormError.component';\n\nexport interface SignupFormValues {\n  email: string;\n  name: string;\n  password: string;\n  confirmPassword: string;\n}\n\ninterface SignupFormProps {\n  onSubmit: (values: SignupFormValues) => void;\n}\n\ntype FormEvent = React.FormEvent<HTMLFormElement>;\ntype FormHandler = (event?: FormEvent) => void;\n\nconst validationSchema = Yup.object({\n  email: Yup.string().email('Invalid e-mail address').required('E-mail is required'),\n  name: Yup.string().matches(/[\\s]/, 'Missing last name').required('Full name is required'),\n  password: Yup.string().min(8, 'Password is too short').required('Password is required'),\n  confirmPassword: Yup.string()\n    .oneOf([Yup.ref('password'), null], 'Please confirm your password')\n    .required('Please confirm your password'),\n});\n\nconst SignupForm = ({ onSubmit }: SignupFormProps) => {\n  const [formTouched, setFormTouched] = useState(false);\n\n  const beforeSubmit = (handleSubmit: FormHandler) => (event?: FormEvent) => {\n    setFormTouched(true);\n    handleSubmit(event);\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        email: '',\n        name: '',\n        password: '',\n        confirmPassword: '',\n      }}\n      validationSchema={validationSchema}\n      onSubmit={onSubmit}\n    >\n      {({ touched, errors, isValid, handleSubmit, getFieldProps }) => (\n        <Form onSubmit={beforeSubmit(handleSubmit)}>\n          <Field\n            label=\"E-mail address\"\n            touched={touched.email}\n            error={errors.email}\n            formikProps={getFieldProps('email')}\n            inputProps={{ type: 'email', required: true }}\n          />\n\n          <Field\n            label=\"Full name\"\n            touched={touched.name}\n            error={errors.name}\n            formikProps={getFieldProps('name')}\n            inputProps={{ type: 'text', required: true }}\n          />\n\n          <Field\n            label=\"Password\"\n            touched={touched.password}\n            error={errors.password}\n            formikProps={getFieldProps('password')}\n            inputProps={{ type: 'password', required: true }}\n          />\n\n          <Field\n            label=\"Confirm your password\"\n            touched={touched.confirmPassword}\n            error={errors.confirmPassword}\n            formikProps={getFieldProps('confirmPassword')}\n            inputProps={{ type: 'password', required: true }}\n          />\n\n          <FormError isValid={isValid} touched={formTouched} />\n\n          <Submit>Continue</Submit>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default SignupForm;\n","import React from 'react';\nimport Layout from '../../common/Layout/Layout.component';\nimport SignupForm, { SignupFormValues } from '../SignupForm/SignupForm';\n\nconst handleSubmit = (values: SignupFormValues) => {\n  // eslint-disable-next-line\n  console.log(values);\n};\n\nconst Signup = () => (\n  <Layout title=\"Sign up\">\n    <SignupForm onSubmit={handleSubmit} />\n  </Layout>\n);\n\nexport default Signup;\n","import React from 'react';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport Signup from './signup/Signup/Signup';\n\nconst App = () => (\n  <Router>\n    <Switch>\n      <Route path=\"/signin\">Sign In</Route>\n      <Route path=\"/signup\">\n        <Signup />\n      </Route>\n      <Route path=\"/\">\n        <Signup />\n      </Route>\n    </Switch>\n  </Router>\n);\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"field\":\"Field_field__3DbyS\",\"field__error\":\"Field_field__error__2vHXr\",\"field__required-asterisk\":\"Field_field__required-asterisk__bzYk0\",\"field__input\":\"Field_field__input__2onQu\",\"field__input--invalid\":\"Field_field__input--invalid__hnr4K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"layout\":\"Layout_layout__3NDCU\",\"layout__content\":\"Layout_layout__content__YcH8X\",\"layout__children-container\":\"Layout_layout__children-container__1dERg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__3NMmT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"submit\":\"Submit_submit__13hGd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form-error\":\"FormError_form-error__20FfW\"};"],"sourceRoot":""}