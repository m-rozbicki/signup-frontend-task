{"version":3,"sources":["common/Form/Form.module.scss","common/Form/FormError.module.scss","signup/Signup/Signup.tsx","common/Layout/Layout.component.tsx","services/apiClient.ts","signup/SignupForm/SignupForm.schema.ts","common/Form/Form.component.tsx","common/Form/Field.component.tsx","common/Form/Submit.component.tsx","common/Form/FormError.component.tsx","signup/SignupForm/SignupForm.tsx","App.tsx","reportWebVitals.ts","mocks/handlers.ts","mocks/browser.ts","index.tsx","common/Form/Field.module.scss","common/Layout/Layout.module.scss","common/Form/Submit.module.scss"],"names":["module","exports","AxiosCode","Layout","title","children","className","styles","httpClient","axios","create","baseURL","process","timeout","apiClient","values","post","validationSchema","Yup","email","required","name","matches","password","min","confirmPassword","oneOf","Form","otherProps","Field","label","touched","error","formikProps","inputProps","id","role","aria-label","aria-invalid","aria-describedby","Submit","status","type","FormError","isValid","SignupForm","onSubmit","useState","formTouched","setFormTouched","beforeSubmit","handleSubmit","event","initialValues","errors","getFieldProps","extractMessage","response","data","message","code","TimeoutError","Signup","errorMessage","setErrorMessage","useCallback","a","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","delay","handlers","rest","req","res","ctx","validateSync","body","httpStatus","BAD_REQUEST","json","user","CONFLICT","INTERNAL_SERVER_ERROR","networkError","CREATED","worker","setupWorker","window","location","pathname","start","waitUntilReady","serviceWorker","url","ReactDOM","render","StrictMode","document","getElementById","main"],"mappings":"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","file":"static/js/main.ffc95fa2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__3NMmT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form-error\":\"FormError_form-error__20FfW\"};","import React, { useState, useCallback } from 'react';\nimport { AxiosError } from 'axios';\nimport Layout from '../../common/Layout/Layout.component';\nimport { apiClient } from '../../services/apiClient';\nimport SignupForm, { SignupFormValues } from '../SignupForm/SignupForm';\n\nenum AxiosCode {\n  TimeoutError = 'ECONNABORTED',\n}\n\nconst extractMessage = (error: AxiosError) => {\n  if (error?.response?.data?.message) {\n    return error.response.data.message;\n  }\n\n  if (error.code === AxiosCode.TimeoutError) {\n    return 'Error connecting to server. Please check your connection and contact support if issues persist.';\n  }\n\n  return error.message;\n};\n\nconst Signup = () => {\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  const handleSubmit = useCallback(async (values: SignupFormValues) => {\n    try {\n      setErrorMessage(null);\n      await apiClient.registerUser(values);\n    } catch (error) {\n      setErrorMessage(extractMessage(error));\n    }\n  }, []);\n\n  return (\n    <Layout title=\"Sign up\">\n      <SignupForm onSubmit={handleSubmit} error={errorMessage} />\n    </Layout>\n  );\n};\n\nexport default Signup;\n","import React from 'react';\nimport styles from './Layout.module.scss';\n\ninterface LayoutProps {\n  title?: string;\n  children?: React.ReactNode;\n}\n\nconst Layout = ({ title = '', children = null }: LayoutProps) => (\n  <div className={styles['layout']}>\n    <div className={styles['layout__content']}>\n      <h1>{title}</h1>\n      <div className={styles['layout__children-container']}>{children}</div>\n    </div>\n  </div>\n);\n\nexport default Layout;\n","import axios from 'axios';\nimport { SignupFormValues } from '../signup/SignupForm/SignupForm';\n\nconst { REACT_APP_BACKEND_URL } = process.env;\n\nconst httpClient = axios.create({\n  baseURL: REACT_APP_BACKEND_URL,\n  timeout: 5000,\n});\n\nexport const apiClient = {\n  registerUser: (values: SignupFormValues) => httpClient.post(\n    '/users/register',\n    values,\n  ),\n\n  authenthicateUser: () => {},\n};\n","import * as Yup from 'yup';\n\nexport const validationSchema = Yup.object({\n  email: Yup.string().email('Invalid e-mail address').required('E-mail is required'),\n  name: Yup.string().matches(/[\\s]/, 'Missing last name').required('Full name is required'),\n  password: Yup.string().min(8, 'Password is too short').required('Password is required'),\n  confirmPassword: Yup.string()\n    .oneOf([Yup.ref('password'), null], 'Please confirm your password')\n    .required('Please confirm your password'),\n});\n","import React, { FormHTMLAttributes } from 'react';\nimport styles from './Form.module.scss';\n\nconst Form = ({ children, ...otherProps }: FormHTMLAttributes<HTMLFormElement>) => (\n  <form className={styles['form']} {...otherProps}>\n    {children}\n  </form>\n);\n\nexport default Form;\n","import React, { InputHTMLAttributes } from 'react';\nimport { FieldInputProps } from 'formik';\nimport styles from './Field.module.scss';\n\ninterface FieldProps {\n  label: string;\n  formikProps: FieldInputProps<string | number | readonly string[] | undefined>;\n  touched?: boolean;\n  error?: string;\n  inputProps?: InputHTMLAttributes<HTMLInputElement>;\n}\n\nconst Field = ({\n  label,\n  touched = false,\n  error = '',\n  formikProps,\n  inputProps = {},\n}: FieldProps) => (\n  <div className={styles['field']}>\n    <div\n      id={`form-error_${formikProps.name}`}\n      className={styles['field__error']}\n      role=\"alert\"\n      aria-label={`${label} error`}\n    >\n      {touched ? error : ''}\n    </div>\n    <label>\n      {label}\n      <span className={styles['field__required-asterisk']}>\n        {inputProps.required ? ' *' : ''}\n      </span>\n      <input\n        className={`${styles['field__input']} ${\n          touched && error ? styles['field__input--invalid'] : ''\n        }`}\n        aria-invalid={touched && error ? 'true' : 'false'}\n        aria-describedby={`form-error_${formikProps.name}`}\n        {...formikProps}\n        {...inputProps}\n      />\n    </label>\n  </div>\n);\n\nexport default Field;\n","import React, { ButtonHTMLAttributes } from 'react';\nimport styles from './Submit.module.scss';\n\ninterface SubmitProps extends ButtonHTMLAttributes<HTMLButtonElement> {\n  status?: 'pending' | 'error' | 'success' | null\n}\n\nconst Submit = ({\n  children,\n  status = null,\n  ...otherProps\n}: SubmitProps) => (\n  <button\n    type=\"submit\"\n    className={`${styles['submit']} ${status ? styles[`submit--${status}`] : ''}`}\n    {...otherProps}\n  >\n    {children}\n  </button>\n);\n\nexport default Submit;\n","import React from 'react';\nimport styles from './FormError.module.scss';\n\ninterface FormErrorProps {\n  isValid: boolean;\n  touched: boolean;\n  error?: string | null;\n}\n\nconst FormError = ({ touched, isValid, error }: FormErrorProps) => (\n  <div className={styles['form-error']} aria-label=\"Form error\" role=\"alert\">\n    {touched && !isValid && 'Form contains errors.'}\n    {touched && isValid && error}\n  </div>\n);\n\nexport default FormError;\n","import React, { useState } from 'react';\nimport { Formik } from 'formik';\nimport { validationSchema } from './SignupForm.schema';\nimport { Form, Field, Submit } from '../../common/Form';\nimport FormError from '../../common/Form/FormError.component';\n\nexport interface SignupFormValues {\n  email: string;\n  name: string;\n  password: string;\n  confirmPassword: string;\n}\n\ninterface SignupFormProps {\n  onSubmit: (values: SignupFormValues) => void;\n  error?: string | null;\n}\n\ntype FormEvent = React.FormEvent<HTMLFormElement>;\ntype FormHandler = (event?: FormEvent) => void;\n\nconst SignupForm = ({ onSubmit, error }: SignupFormProps) => {\n  const [formTouched, setFormTouched] = useState(false);\n\n  const beforeSubmit = (handleSubmit: FormHandler) => (event?: FormEvent) => {\n    setFormTouched(true);\n    handleSubmit(event);\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        email: '',\n        name: '',\n        password: '',\n        confirmPassword: '',\n      }}\n      validationSchema={validationSchema}\n      onSubmit={onSubmit}\n    >\n      {({ touched, errors, isValid, handleSubmit, getFieldProps }) => (\n        <Form onSubmit={beforeSubmit(handleSubmit)}>\n          <Field\n            label=\"E-mail address\"\n            touched={touched.email}\n            error={errors.email}\n            formikProps={getFieldProps('email')}\n            inputProps={{ type: 'email', required: true }}\n          />\n\n          <Field\n            label=\"Full name\"\n            touched={touched.name}\n            error={errors.name}\n            formikProps={getFieldProps('name')}\n            inputProps={{ type: 'text', required: true }}\n          />\n\n          <Field\n            label=\"Password\"\n            touched={touched.password}\n            error={errors.password}\n            formikProps={getFieldProps('password')}\n            inputProps={{ type: 'password', required: true }}\n          />\n\n          <Field\n            label=\"Confirm your password\"\n            touched={touched.confirmPassword}\n            error={errors.confirmPassword}\n            formikProps={getFieldProps('confirmPassword')}\n            inputProps={{ type: 'password', required: true }}\n          />\n\n          <FormError isValid={isValid} touched={formTouched} error={error} />\n\n          <Submit>Continue</Submit>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default SignupForm;\n","import React from 'react';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport Signup from './signup/Signup/Signup';\n\nconst App = () => (\n  <Router>\n    <Switch>\n      <Route path=\"/signin\">Sign In</Route>\n      <Route path=\"/signup\">\n        <Signup />\n      </Route>\n      <Route path=\"/\">\n        <Signup />\n      </Route>\n    </Switch>\n  </Router>\n);\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { rest, RestRequest } from 'msw';\nimport httpStatus from 'http-status-codes';\nimport { SignupFormValues } from '../signup/SignupForm/SignupForm';\nimport { validationSchema } from '../signup/SignupForm/SignupForm.schema';\n\nconst { REACT_APP_BACKEND_URL } = process.env;\nconst delay = process.env.NODE_ENV === 'test' ? 0 : 1500;\n\nexport const handlers = [\n  rest.post(`${REACT_APP_BACKEND_URL}/users/register`, async (req: RestRequest<SignupFormValues>, res, ctx) => {\n    try {\n      validationSchema.validateSync(req.body);\n    } catch (error) {\n      return res(\n        ctx.delay(delay),\n        ctx.status(httpStatus.BAD_REQUEST),\n        ctx.json({ message: error }),\n      );\n    }\n\n    const user = req.body;\n\n    if (user.email === 'already@registered.com') {\n      return res(\n        ctx.delay(delay),\n        ctx.status(httpStatus.CONFLICT),\n        ctx.json({\n          message: 'The e-mail address you\\'ve provided is already registered.',\n        }),\n      );\n    }\n\n    if (user.name === 'fail me') {\n      return res(\n        ctx.delay(delay),\n        ctx.status(httpStatus.INTERNAL_SERVER_ERROR),\n        ctx.json({\n          message:\n            'There was an error processing your form data. Please contact support if issues persist.',\n        }),\n      );\n    }\n\n    if (user.name === 'timeout me') {\n      return res(ctx.delay('infinite'));\n    }\n\n    if (user.name === 'network error me') {\n      return res.networkError('Failed to connect.');\n    }\n\n    return res(\n      ctx.delay(delay),\n      ctx.status(httpStatus.CREATED),\n      ctx.json({\n        message: 'User was successfully registered.',\n        user: { name: user.name, email: user.email },\n      }),\n    );\n  }),\n];\n","import { setupWorker } from 'msw';\nimport { handlers } from './handlers';\n\nexport const worker = setupWorker(...handlers);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { worker } from './mocks/browser';\n\nconst main = async () => {\n  if (window.location.pathname === '/orm-frontend-task') {\n    window.location.pathname += '/';\n    return;\n  }\n\n  await worker.start({\n    waitUntilReady: true,\n    serviceWorker: {\n      url: '/orm-frontend-task/mockServiceWorker.js',\n    },\n  });\n\n  ReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n  );\n\n  // If you want to start measuring performance in your app, pass a function\n  // to log results (for example: reportWebVitals(console.log))\n  // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n  reportWebVitals();\n};\n\nmain();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"field\":\"Field_field__3DbyS\",\"field__error\":\"Field_field__error__2vHXr\",\"field__required-asterisk\":\"Field_field__required-asterisk__bzYk0\",\"field__input\":\"Field_field__input__2onQu\",\"field__input--invalid\":\"Field_field__input--invalid__hnr4K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"layout\":\"Layout_layout__3NDCU\",\"layout__content\":\"Layout_layout__content__YcH8X\",\"layout__children-container\":\"Layout_layout__children-container__1dERg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"submit\":\"Submit_submit__13hGd\"};"],"sourceRoot":""}